#include <bits/stdc++.h>
using namespace std;
class Node{
public:
	int data;
	Node *next;
	Node(int data)
	{
		this->data=data;
		this->next=NULL;
	}
	~Node()
	{
		if(this->next!=NULL)
		{
			delete next;
			next=NULL;
		}
	}
};
void deletenode(Node* &head,int pos)
{
	Node* pre=NULL;
	Node* curr=head;
	int cnt=1;
	if(pos == 1)
	{
		Node* temp = head;
		head=head->next;
		temp->next=NULL;
		delete temp;
	}
	else
	{
		while(cnt < pos)
		{
			pre=curr;
			curr=curr->next;
			cnt++;
		}
		pre->next = curr->next;
		delete curr;
		// head=head->next;
	}
	

}
void insertatbegin(Node* &head,int data)
{
	Node *temp=new Node(data);
	temp->next=head;
	head= temp;
}
void insertatend(Node* &tail,int data)
{
	Node *temp= new Node(data);
	tail->next=temp;
	tail=temp;

}
void insertbeforeagivennode(Node* &head,int data,int item)
{
	Node *temp = head;
	Node *p=NULL;
	Node *c=new Node(data);
	while(temp->data!=item)
	{
		p = temp;
		temp = temp->next;
		if(temp == NULL )
		{
			cout << "item Not Present" << endl;
			return;
		}
	}
	p->next = c;
	c->next = temp;
}
void insertafteragivennode(Node* &head,int data,int item)
{
	Node *temp = head;
	Node *p = new Node(data);
	while(temp->data!=item)
	{
		temp=temp->next;
		if(temp == NULL )
		{
			cout << "item Not Present" << endl;
			return;
		}
	}
	p->next=temp->next;
	temp->next=p;
}
void print(Node* &head)
{
	Node *temp=head;
	while(temp!=NULL)
	{
		cout<<temp->data<<"  ";
		temp=temp->next;
	}
	cout << endl;
}
int main()
{
	Node *head=new Node(10);
	Node* tail=head;
	insertatbegin(head,20);
	print(head);
	insertatend(tail,30);
	insertafteragivennode(head,40,10);
	deletenode(head,3);
	print(head);
	return 0;
}